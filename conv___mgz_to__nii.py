# -*- coding: utf-8 -*-
"""Conv._.mgz_to_.nii.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1NBe92tPM3E-a0TcIugOhCpt6YE2reI57

# **CONVERTING .mgz --> .nii**
"""

import os
import nibabel as nib
import shutil

def convert_mgz_to_nii(mgz_path, nii_path):
    img = nib.load(mgz_path)
    nib.save(img, nii_path)

def process_subject_folder(subject_folder, output_base, phase):
    print(f"Processing subject folder: {subject_folder}")

    subject_id = os.path.basename(subject_folder)

    json_file_name = subject_id + '.json'
    brainmask_file_name = 'processed_mri_data_mri_processed_' + subject_id + '_mri_brainmask.mgz'
    orig_file_name = 'processed_mri_data_mri_processed_' + subject_id + '_mri_orig.mgz'

    json_file_path = os.path.join(subject_folder, json_file_name)
    brainmask_file_path = os.path.join(subject_folder, brainmask_file_name)
    orig_file_path = os.path.join(subject_folder, orig_file_name)

    subject_output_dir = os.path.join(output_base, phase, subject_id)

    # Create output directory for each subject ID within each phase
    os.makedirs(subject_output_dir, exist_ok=True)

    # Copy the .json file to the subject output directory
    if os.path.exists(json_file_path):
        shutil.copy(json_file_path, subject_output_dir)
        print(f"Copied JSON to: {subject_output_dir}")

    # Convert the brainmask.mgz file to .nii format to the subject output directory
    if os.path.exists(brainmask_file_path):
        nii_output_path = os.path.join(subject_output_dir, subject_id + '_brainmask.nii')
        convert_mgz_to_nii(brainmask_file_path, nii_output_path)
        print(f"Converted brainmask MGZ to NII: {nii_output_path}")

    # Convert the orig.mgz file to .nii format in the subject output directory
    if os.path.exists(orig_file_path):
        orig_nii_output_path = os.path.join(subject_output_dir, subject_id + '_orig.nii')
        convert_mgz_to_nii(orig_file_path, orig_nii_output_path)
        print(f"Converted orig MGZ to NII: {orig_nii_output_path}")

def main(input_root, output_root):
    phases = ['AD', 'CN', 'EMCI', 'LMCI', 'MCI']
    for phase in phases:
        phase_input_path = os.path.join(input_root, phase)
        if not os.path.exists(phase_input_path):
            print(f"Phase path does not exist: {phase_input_path}")
            continue
        for subject_id in os.listdir(phase_input_path):
            subject_folder = os.path.join(phase_input_path, subject_id)
            # Skip non-directory files, like .DS_Store (which is created automatically by OS)
            if not os.path.isdir(subject_folder):
                print(f"Skipping non-directory file: {subject_folder}")
                continue
            process_subject_folder(subject_folder, output_root, phase)

# Input and output directories created manually:
input_root = '/Users/jaibhatoa/Desktop/MRI_mgz_files/THESIS/'
output_root = '/Users/jaibhatoa/Desktop/THESIS_MRI_nii_files/'

print(f"Absolute path of input_root: {os.path.abspath(input_root)}")
main(input_root, output_root)